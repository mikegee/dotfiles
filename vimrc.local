map <Leader>bp Obinding.pry<ESC>:write<CR>

function! RenameFile()
  let old_name = expand('%')
  let new_name = input('New file name: ', expand('%'))
  if new_name != '' && new_name != old_name
    exec ':saveas ' . new_name
    exec ':silent !rm ' . old_name
    redraw!
  endif
endfunction
map <Leader>n :call RenameFile()<cr>

" Escape is far away, just hit j and k at the same time!
imap kj <Esc>
imap jk <Esc>

" Start scrolling 3 lines before the border
set scrolloff=3

" Reselect visual block after indent/outdent
vnoremap < <gv
vnoremap > >gv

map <Leader>ra :%s/

imap <c-e> <c-o>$
imap <c-a> <c-o>^

" Quicker writes
map <Leader>w :write<cr>
map  ww :write<cr>
imap ww <c-o>:write<cr>

" Move to adjacent tabs with H and L
map <c-h> gT
map <c-l> gt

" Make editing my vimrc easier
map <Leader>ev :tabedit ~/.vimrc.local<cr>
map <Leader>sv :source ~/.vimrc.local<cr>

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" Change CtrlP selection behavior
" Enter to open the file in a new tab, Ctrl-t to reuse current tab
" (opposite of the defaults)
let g:ctrlp_prompt_mappings = {
    \ 'AcceptSelection("e")': ['<c-t>'],
    \ 'AcceptSelection("t")': ['<cr>', '<2-LeftMouse>'],
    \ }

" relative line numbers in Normal Mode
autocmd InsertEnter * :set number
autocmd InsertLeave * :set relativenumber

" don't use arrow keys in Insert Mode
inoremap <Left>  <NOP>
inoremap <Right> <NOP>
inoremap <Up>    <NOP>
inoremap <Down>  <NOP>

" Indent if we're at the beginning of a line. Else, do completion.
function! InsertTabWrapper()
    let col = col('.') - 1
    if !col || getline('.')[col - 1] !~ '\k'
        return "\<tab>"
    else
        return "\<c-p>"
    endif
endfunction
inoremap <tab> <c-r>=InsertTabWrapper()<cr>
inoremap <s-tab> <c-n>

" Create directory on save if needed
function! s:MkNonExDir(file, buf)
  if empty(getbufvar(a:buf, '&buftype')) && a:file!~#'\v^\w+\:\/'
    let dir=fnamemodify(a:file, ':h')
    if !isdirectory(dir)
      call mkdir(dir, 'p')
    endif
 endif
endfunction
augroup BWCCreateDir
  autocmd!
  autocmd BufWritePre * :call s:MkNonExDir(expand('<afile>'), +expand('<abuf>'))
augroup END

" automatically remove trailing whitespace on save with trailertrash plugin
autocmd BufWritePre * :Trim

" don't show trailing whitespace when committing
let g:trailertrash_blacklist = ['.git/COMMIT_EDITMSG']

" :set paste and :set nopaste via F2
set pastetoggle=<F2>

set splitbelow
set splitright

" Improve syntax highlighting
au BufRead,BufNewFile Gemfile,Guardfile set filetype=ruby
