if &compatible
  set nocompatible
end

" Remove declared plugins
function! s:UnPlug(plug_name)
  if has_key(g:plugs, a:plug_name)
    call remove(g:plugs, a:plug_name)
  endif
endfunction
command!  -nargs=1 UnPlug call s:UnPlug(<args>)

let g:has_async = v:version >= 800 || has('nvim')

call plug#begin('~/.vim/bundle')

" Define bundles via Github repos
Plug 'christoomey/vim-run-interactive' " audit: tiny, seems cool
Plug 'ctrlpvim/ctrlp.vim'              " audit: required
" Plug 'elixir-lang/vim-elixir'        " audit: vim-polyglot replaces
" Plug 'fatih/vim-go'                  " audit: vim-polyglot replaces
" Plug 'janko-m/vim-test'              " audit: probably lightweight, but I use guard
" Plug 'kchmck/vim-coffee-script'      " audit: vim-polyglot replaces
" Plug 'pangloss/vim-javascript'       " audit: vim-polyglot replaces
Plug 'pbrisbin/vim-mkdir'              " audit: required, prolly tiny
" Plug 'slim-template/vim-slim'        " audit: vim-polyglot replaces
" Plug 'tpope/vim-bundler'             " audit: don't use it
Plug 'tpope/vim-endwise'               " audit: required TODO: check if polyglot does this
" Plug 'tpope/vim-eunuch'              " audit: don't use it
Plug 'tpope/vim-fugitive'              " audit: required. I use :Gdiff, :Gread
" Plug 'tpope/vim-projectionist'       " audit: don't use it
" Plug 'tpope/vim-rails'               " audit: used too rarely
" Plug 'tpope/vim-rake'                " audit: don't use it
Plug 'tpope/vim-repeat'                " audit: probably used
" Plug 'tpope/vim-rhubarb'             " audit: don't use it. seems cool tho
Plug 'tpope/vim-surround'              " audit: required
" Plug 'vim-ruby/vim-ruby'             " audit: vim-polyglot replaces
Plug 'vim-scripts/tComment'            " audit: required

if g:has_async
  Plug 'w0rp/ale'                      " audit: probably performant, might be cool
endif

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
